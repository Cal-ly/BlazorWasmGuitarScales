@using BlazorWasmGuitarScales.Models
@using BlazorWasmGuitarScales.Services
@using System.Text.Json
@inject WeatherService WeatherService

<h3>5-Day Forecast @weatherResponse?.Location?.Name</h3>

@if (errorMessage != null)
{
    <p style="color: red;">@errorMessage</p>
}
else if (weatherResponse != null)
{
    <table class="table table-bordered table-hover table-striped table-dark table-responsive-sm table-sm">
        <thead class="thead-dark">
            <tr>
                <th>Date</th>
                <th>Avg Temp (°C)</th>
                <th>Precipitation (mm)</th>
                <th>Avg Humid (%)</th>
                <th>Condition</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td> @weatherResponse.Location?.Localtime </td>
                <td> @weatherResponse.Current?.Temp_C &deg;C </td>
                <td> @weatherResponse.Current?.Precip_Mm mm </td>
                <td> @weatherResponse.Current?.Humidity % </td>
                <td><img src="@weatherResponse.Current?.Condition?.Icon" alt="@weatherResponse.Current?.Condition?.Text" /></td>
            </tr>
            @foreach (var day in weatherResponse.Forecast?.Forecastday ?? Enumerable.Empty<ForecastDay>())
            {
                <tr>
                    <td>@day.Date</td>
                    <td>@day.Day?.Avgtemp_C</td>
                    <td>@day.Day?.Totalprecip_Mm mm</td>
                    <td>@day.Day?.Avghumidity %</td>
                    <td><img src="@day.Day?.Condition?.Icon" alt="@day.Day?.Condition?.Text"/></td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Loading weather data...</p>
}

@code {
    private WeatherResponse? weatherResponse;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            weatherResponse = await WeatherService.GetWeatherDataAsync("copenhagen", 5); // Adjust the number of days as needed
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }
}